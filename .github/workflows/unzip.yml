# .github/workflows/unzip_generic.yml

name: 自动解压仓库中的 Zip 文件
on:
  push:
    # 仅在 main 分支（或你的主分支）上触发
    branches:
      - main 
    # 只有当推送的提交中包含 .zip 文件（在任何目录下）时才触发
    paths:
      - '**.zip'
  
  # 同样允许手动触发，用于处理仓库中已有的 zip 文件
  workflow_dispatch:

# 授予工作流对仓库内容的写权限
permissions:
  contents: write

jobs:
  unzip_all_zips:
    runs-on: ubuntu-22.04
    # 判断触发者不是 GitHub Actions 自身，防止无限循环
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 查找、原地解压并删除所有 zip 文件
        run: |
          echo "开始查找仓库中的 .zip 文件..."
          
          # 查找所有类型为 'f' (文件) 且名称以 '.zip' 结尾的文件
          # -not -path "./.git/*" 确保我们不搜索 .git 目录内部
          ZIP_FILES=$(find . -type f -name "*.zip" -not -path "./.git/*")

          if [ -z "$ZIP_FILES" ]; then
            echo "未在此次检出的代码中找到 .zip 文件。"
            # 这不是一个错误（可能是一个删除 .zip 的推送），正常退出
            exit 0
          fi

          echo "找到以下 .zip 文件并准备处理:"
          echo "$ZIP_FILES"
          echo "---"

          # 使用 'while read' 循环来安全处理可能包含空格的文件名
          echo "$ZIP_FILES" | while read -r ZIP_FILE; do
            if [ -f "$ZIP_FILE" ]; then
              # 1. 获取该 .zip 文件所在的目录 (实现 "原地")
              TARGET_DIR=$(dirname "$ZIP_FILE")
              
              echo "正在处理: $ZIP_FILE"
              echo "  -> 解压到目标目录: $TARGET_DIR"
              
              # 2. -o 强制覆盖, -d 指定目标目录
              unzip -o "$ZIP_FILE" -d "$TARGET_DIR"
              
              # 3. 检查解压是否成功
              if [ $? -eq 0 ]; then
                echo "  -> 解压成功，正在删除: $ZIP_FILE"
                # 4. 删除原始的 zip 文件
                rm "$ZIP_FILE"
              else
                echo "  -> 错误: 解压 $ZIP_FILE 失败。"
                exit 1 # 如果解压失败，则停止整个步骤
              fi
            fi
          done
          echo "---"
          echo "所有 .zip 文件处理完毕。"

      - name: 提交变动
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 检查是否有文件变动（新解压的文件 + 被删除的 .zip 文件）
          if ! git diff --quiet; then
            echo "检测到文件变动，正在提交..."
            # 添加所有变动
            git add .
            # 使用一个通用的提交信息
            git commit -m "Chore: 自动解压并删除 .zip 文件"
            # 推送提交到远程仓库
            git push
          else
            echo "没有文件变动需要提交。"
          fi
